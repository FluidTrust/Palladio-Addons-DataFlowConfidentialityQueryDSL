/*
 * generated by Xtext 2.20.0
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.sebinside.dcp.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.sebinside.dcp.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.sebinside.dcp.dsl.services.DSLGrammarAccess;

}
@parser::members {
	private DSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueSet
entryRuleValueSet
:
{ before(grammarAccess.getValueSetRule()); }
	 ruleValueSet
{ after(grammarAccess.getValueSetRule()); } 
	 EOF 
;

// Rule ValueSet
ruleValueSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueSetAccess().getGroup()); }
		(rule__ValueSet__Group__0)
		{ after(grammarAccess.getValueSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicsType
entryRuleCharacteristicsType
:
{ before(grammarAccess.getCharacteristicsTypeRule()); }
	 ruleCharacteristicsType
{ after(grammarAccess.getCharacteristicsTypeRule()); } 
	 EOF 
;

// Rule CharacteristicsType
ruleCharacteristicsType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicsTypeAccess().getAlternatives()); }
		(rule__CharacteristicsType__Alternatives)
		{ after(grammarAccess.getCharacteristicsTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeType
entryRuleAttributeType
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup()); }
		(rule__AttributeType__Group__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyType
entryRulePropertyType
:
{ before(grammarAccess.getPropertyTypeRule()); }
	 rulePropertyType
{ after(grammarAccess.getPropertyTypeRule()); } 
	 EOF 
;

// Rule PropertyType
rulePropertyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyTypeAccess().getGroup()); }
		(rule__PropertyType__Group__0)
		{ after(grammarAccess.getPropertyTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacteristicSelector
entryRuleCharacteristicSelector
:
{ before(grammarAccess.getCharacteristicSelectorRule()); }
	 ruleCharacteristicSelector
{ after(grammarAccess.getCharacteristicSelectorRule()); } 
	 EOF 
;

// Rule CharacteristicSelector
ruleCharacteristicSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacteristicSelectorAccess().getGroup()); }
		(rule__CharacteristicSelector__Group__0)
		{ after(grammarAccess.getCharacteristicSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignementOperator
entryRuleAssignementOperator
:
{ before(grammarAccess.getAssignementOperatorRule()); }
	 ruleAssignementOperator
{ after(grammarAccess.getAssignementOperatorRule()); } 
	 EOF 
;

// Rule AssignementOperator
ruleAssignementOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignementOperatorAccess().getLessThanSignHyphenMinusKeyword()); }
		'<-'
		{ after(grammarAccess.getAssignementOperatorAccess().getLessThanSignHyphenMinusKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getAbstractElementAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getValueSetParserRuleCall_1()); }
		ruleValueSet
		{ after(grammarAccess.getAbstractElementAccess().getValueSetParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getCharacteristicsTypeParserRuleCall_2()); }
		ruleCharacteristicsType
		{ after(grammarAccess.getAbstractElementAccess().getCharacteristicsTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicsType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicsTypeAccess().getAttributeTypeParserRuleCall_0()); }
		ruleAttributeType
		{ after(grammarAccess.getCharacteristicsTypeAccess().getAttributeTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCharacteristicsTypeAccess().getPropertyTypeParserRuleCall_1()); }
		rulePropertyType
		{ after(grammarAccess.getCharacteristicsTypeAccess().getPropertyTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group__0__Impl
	rule__ValueSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getValuesetKeyword_0()); }
	'valueset'
	{ after(grammarAccess.getValueSetAccess().getValuesetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group__1__Impl
	rule__ValueSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getNameAssignment_1()); }
	(rule__ValueSet__NameAssignment_1)
	{ after(grammarAccess.getValueSetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group__2__Impl
	rule__ValueSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getAssignementOperatorParserRuleCall_2()); }
	ruleAssignementOperator
	{ after(grammarAccess.getValueSetAccess().getAssignementOperatorParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group__3__Impl
	rule__ValueSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getValueSetAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group__4__Impl
	rule__ValueSet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getMembersAssignment_4()); }
	(rule__ValueSet__MembersAssignment_4)
	{ after(grammarAccess.getValueSetAccess().getMembersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group__5__Impl
	rule__ValueSet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getGroup_5()); }
	(rule__ValueSet__Group_5__0)*
	{ after(grammarAccess.getValueSetAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getValueSetAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueSet__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group_5__0__Impl
	rule__ValueSet__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getValueSetAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueSet__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueSetAccess().getMembersAssignment_5_1()); }
	(rule__ValueSet__MembersAssignment_5_1)
	{ after(grammarAccess.getValueSetAccess().getMembersAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__0__Impl
	rule__AttributeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeKeyword_0()); }
	'attribute'
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__1__Impl
	rule__AttributeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
	(rule__AttributeType__NameAssignment_1)
	{ after(grammarAccess.getAttributeTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__2__Impl
	rule__AttributeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAssignementOperatorParserRuleCall_2()); }
	ruleAssignementOperator
	{ after(grammarAccess.getAttributeTypeAccess().getAssignementOperatorParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getValuesetAssignment_3()); }
	(rule__AttributeType__ValuesetAssignment_3)
	{ after(grammarAccess.getAttributeTypeAccess().getValuesetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyType__Group__0__Impl
	rule__PropertyType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyTypeAccess().getPropertyKeyword_0()); }
	'property'
	{ after(grammarAccess.getPropertyTypeAccess().getPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyType__Group__1__Impl
	rule__PropertyType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyTypeAccess().getNameAssignment_1()); }
	(rule__PropertyType__NameAssignment_1)
	{ after(grammarAccess.getPropertyTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyType__Group__2__Impl
	rule__PropertyType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyTypeAccess().getAssignementOperatorParserRuleCall_2()); }
	ruleAssignementOperator
	{ after(grammarAccess.getPropertyTypeAccess().getAssignementOperatorParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyTypeAccess().getValuesetAssignment_3()); }
	(rule__PropertyType__ValuesetAssignment_3)
	{ after(grammarAccess.getPropertyTypeAccess().getValuesetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CharacteristicSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicSelector__Group__0__Impl
	rule__CharacteristicSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicSelectorAccess().getNameAssignment_0()); }
	(rule__CharacteristicSelector__NameAssignment_0)
	{ after(grammarAccess.getCharacteristicSelectorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicSelector__Group__1__Impl
	rule__CharacteristicSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicSelectorAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getCharacteristicSelectorAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSelector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CharacteristicSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSelector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCharacteristicSelectorAccess().getLiteralAssignment_2()); }
	(rule__CharacteristicSelector__LiteralAssignment_2)
	{ after(grammarAccess.getCharacteristicSelectorAccess().getLiteralAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getModelAccess().getElementsAbstractElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueSetAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getValueSetAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__MembersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueSetAccess().getMembersIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getValueSetAccess().getMembersIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueSet__MembersAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueSetAccess().getMembersIDTerminalRuleCall_5_1_0()); }
		RULE_ID
		{ after(grammarAccess.getValueSetAccess().getMembersIDTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__ValuesetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getValuesetValueSetCrossReference_3_0()); }
		(
			{ before(grammarAccess.getAttributeTypeAccess().getValuesetValueSetIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttributeTypeAccess().getValuesetValueSetIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getAttributeTypeAccess().getValuesetValueSetCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__ValuesetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyTypeAccess().getValuesetValueSetCrossReference_3_0()); }
		(
			{ before(grammarAccess.getPropertyTypeAccess().getValuesetValueSetIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyTypeAccess().getValuesetValueSetIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getPropertyTypeAccess().getValuesetValueSetCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSelector__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicSelectorAccess().getNameCharacteristicsTypeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getCharacteristicSelectorAccess().getNameCharacteristicsTypeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCharacteristicSelectorAccess().getNameCharacteristicsTypeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getCharacteristicSelectorAccess().getNameCharacteristicsTypeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacteristicSelector__LiteralAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacteristicSelectorAccess().getLiteralIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCharacteristicSelectorAccess().getLiteralIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
