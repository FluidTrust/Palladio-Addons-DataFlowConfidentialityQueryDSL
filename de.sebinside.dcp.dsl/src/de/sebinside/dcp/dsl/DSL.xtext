grammar de.sebinside.dcp.dsl.DSL with org.eclipse.xtext.common.Terminals

generate dSL "http://www.sebinside.de/dcp/dsl/DSL"

// Nested EPackage has to be referred to by platform:/resource URI
// https://sdqweb.ipd.kit.edu/wiki/Importing_nested_EPackages_in_Xtext
import "platform:/resource/org.palladiosimulator.pcm.dataprocessing/model/dataprocessing.ecore#//characteristics" as characteristics

// Import approach, not working at all
//CharacteristicsType2 returns characteristics::CharacteristicType:
//	entityName = ID '.' literal = ID;

Model:
	(elements+=AbstractElement)*;

AbstractElement:
	ImportCharacteristics | DataType | ValueSet | CharacteristicsType | CharacteristicClass | Constraint;

DataType:
	'datatype' name=ID;

ValueSet:
	'valueset' name=ID ASSIGNEMENT_OPERATOR '[' members+=ID (',' members+=ID)* ']';

CharacteristicsType:
	AttributeType | PropertyType;

AttributeType:
	'attribute' name=ID ASSIGNEMENT_OPERATOR valueset=[ValueSet];

PropertyType:
	'property' name=ID ASSIGNEMENT_OPERATOR valueset=[ValueSet];

CharacteristicClass:
	'class' name=ID '{' members+=CharacteristicSelector (',' members+=CharacteristicSelector)* '}';

CharacteristicSelector:
	ref=[CharacteristicsType] '.'
	(((negated?='!')? literals+=ID) |
	('[' literals+=ID ((',' literals+=ID)* | (conjuncted?='&' literals+=ID)*) ']'));
	
// Original characteristics usage starts here
// -----------------------------------------------------

// Current state: Scoping is missing.
// Possible tutorial? https://blogs.itemis.com/de/in-5-minuten-zur-dsl-mit-transitiven-importen-in-xtext

AltCharacteristicSelector:
	ref=[characteristics::CharacteristicType] '.'
	(((negated?='!')? literals+=[characteristics::EnumCharacteristicLiteral]) |
	('[' literals+=[characteristics::EnumCharacteristicLiteral] 
		((',' literals+=[characteristics::EnumCharacteristicLiteral])* 
			| (conjuncted?='&' literals+=[characteristics::EnumCharacteristicLiteral])*
		) ']'
	));

ImportCharacteristics:
	'import' importURI=STRING
;

// Original characteristics usage ends here
// -----------------------------------------------------

Constraint:
	'constraint' name=STRING '{' rule=Rule '}';

Rule:
	dataSelectors+=DataSelector ('&' dataSelectors+=DataSelector)*
	statement=Statement
	destinationSelectors+=DestinationSelector ('&' destinationSelectors+=DestinationSelector)*;

DataSelector:
	AttributeSelector | AttributeClassSelector;

AttributeSelector:
	'data.attribute.' ref=CharacteristicSelector;

AttributeClassSelector:
	'data.class.' (negated?='!')? ref=[CharacteristicClass];

DestinationSelector:
	PropertySelector | PropertyClassSelector;

PropertySelector:
	'node.property.' ref=CharacteristicSelector;

PropertyClassSelector:
	'node.class.' (negated?='!')? ref=[CharacteristicClass];

Statement:
	modality=StatementModality type=StatementType;

StatementType:
	name='FLOWS';

StatementModality:
	name='NEVER';

terminal ASSIGNEMENT_OPERATOR:
	'<-';