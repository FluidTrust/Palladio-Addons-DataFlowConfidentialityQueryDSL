grammar org.palladiosimulator.dataflow.confidentiality.pcm.querydsl.PCMDFDConstraintLanguage 
with de.sebinside.dcp.dsl.DSL 

generate pCMDFDConstraintLanguage "http://www.palladiosimulator.org/dataflow/confidentiality/pcm/querydsl/PCMDFDConstraintLanguage"

import "http://www.sebinside.de/dcp/dsl/DSL" as base 

import "platform:/resource/org.palladiosimulator.dataflow.confidentiality.pcm.model/model/dataFlowConfidentiality.ecore#//characteristics" as pcmDictionary
import "platform:/resource/org.palladiosimulator.dataflow.confidentiality.pcm.model/model/dataFlowConfidentiality.ecore#//repository" as pcmConfRepository

import "platform:/resource/org.palladiosimulator.pcm/model/pcm.ecore#//allocation" as allocation
import "platform:/resource/org.palladiosimulator.pcm/model/pcm.ecore#//usagemodel" as usagemodel
import "platform:/resource/org.palladiosimulator.pcm/model/pcm.ecore#//core/composition" as composition
import "platform:/resource/org.palladiosimulator.pcm/model/pcm.ecore#//core/entity" as entity
import "platform:/resource/org.palladiosimulator.pcm/model/pcm.ecore#//repository" as repository
import "platform:/resource/org.palladiosimulator.pcm/model/pcm.ecore#//seff" as seff


@Override
Model:
	(elements+=AbstractElement)*;

@Override
PropertySelector:
	'element' '.' 'property' '.' ref=CharacteristicTypeSelector;

@Override
PropertyClassSelector:
	'element' '.' 'class' '.' ref=[base::CharacteristicClass];

@Override
NodeIdentitiySelector:
	SEFFNodeIdentitySelector | UserActionNodeIdentitySelector | StoreNodeIdentitySelector | UserNodeIdentitySelector | DataChannelNodeIdentitySelector | ActionNodeIdentitySelector;

SEFFNodeIdentitySelector:
	'element' '.' 'identity' '.' 'SEFF' '.' assemblies+=[composition::AssemblyContext|StringOrId] ('.' assemblies+=[composition::AssemblyContext|StringOrId])* '.' signature=[repository::OperationSignature|StringOrId]
;

UserActionNodeIdentitySelector:
	'element' '.' 'identity' '.' 'UserAction' '.' userAction=[usagemodel::EntryLevelSystemCall|StringOrId]
;

StoreNodeIdentitySelector:
	'element' '.' 'identity' '.' 'Store' '.' assemblies+=[composition::AssemblyContext|StringOrId] ('.' assemblies+=[composition::AssemblyContext|StringOrId])*
;

UserNodeIdentitySelector:
	'element' '.' 'identity' '.' 'SystemUser' '.' usageScenario=[usagemodel::UsageScenario|StringOrId]
;

DataChannelNodeIdentitySelector:
	'element' '.' 'identity' '.' 'DataChannel' '.' assemblies+=[composition::AssemblyContext|StringOrId] ('.' assemblies+=[composition::AssemblyContext|StringOrId])*
;

ActionNodeIdentitySelector:
	'element' '.' 'identity' '.' 'Action' '.' assemblies+=[composition::AssemblyContext|StringOrId] ('.' assemblies+=[composition::AssemblyContext|StringOrId])* '.' signature=[repository::OperationSignature|StringOrId] '.' action=[seff::AbstractAction|StringOrId]
;

@Override
NodeSelector:
	PropertySelector | PropertyClassSelector | NodeIdentitiySelector | NodeTypeSelectorForArchitecture;

NodeTypeSelectorForArchitecture:
	'element' '.' 'type' '.' type=ElementType
;

enum ElementType:
	SEFF = 'SEFF' | USERACTION = 'UserAction' | STORE = 'Store' | USER = 'SystemUser' | DATACHANNEL = 'DataChannel' | ACTION = 'Action' 
;
