/*
 * generated by Xtext 2.24.0
 */
package org.palladiosimulator.dataflow.confidentiality.pcm.querydsl.generator

import de.sebinside.dcp.dsl.dSL.GlobalConstantDefinition
import de.sebinside.dcp.dsl.dSL.Rule
import de.sebinside.dcp.dsl.generator.DSLGenerator
import de.sebinside.dcp.dsl.generator.crossplatform.Converter
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.palladiosimulator.dataflow.confidentiality.pcm.querydsl.converter.PCMDFDConverter
import org.palladiosimulator.dataflow.confidentiality.pcm.querydsl.pCMDFDConstraintLanguage.Model
import org.palladiosimulator.dataflow.confidentiality.pcm.querydsl.queryrule.PCMDFDInputPinQueryRule
import org.palladiosimulator.dataflow.confidentiality.pcm.workflow.TransitiveTransformationTrace

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class PCMDFDConstraintLanguageGenerator extends DSLGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		// intentionally empty, so the editor does not try to generate a output
	}
	
	def generateFromModel(Model model) {
		super.generateFromModel(model as de.sebinside.dcp.dsl.dSL.Model)
	}
	
	override generateRule(Rule mainRule, String constraintName, Converter converter, Iterable<GlobalConstantDefinition> globalConstants) {
		var inputRule = new PCMDFDInputPinQueryRule(mainRule, constraintName, converter)
		inputRule.generate(globalConstants)
	}
	
	def setTransitiveTransformationTrace(TransitiveTransformationTrace trace) {
		this.converter = new PCMDFDConverter(trace)
	}

}
